<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg width="100%" height="100%" version="1.1" viewBox="0 0 4000 3000"
    xmlns="http://www.w3.org/2000/svg" 
    xmlns:xlink="http://www.w3.org/1999/xlink"
    onload="init()"
    onmouseup="mouseUp(evt)"
    onmousemove="mouseMove(evt)"
    >
<!--
    Testing Dragging of SVG Entities
    Copyright(c) 2005, Jeff Schiller
    
    - works in IE+ASV
    - works in Firefox 1.5
    - does NOT work in Opera 9 TP1
    
-->
<title>SVG Dragging</title>
<desc>This example shows how it is possible to enable dragging of objects within SVG.  The one thing it does not address is the z-level (in a typical windowing environment, clicking on an object would bring it to the top z-level), since this was not important for my demonstration I left it out.

The example shows four objects, a circle, a rectangle, and two arbitrary shapes.  I use custom attributes (dragx, dragy) to sidestep having to parse transformation strings.
</desc>
<script><![CDATA[

    function inspect(obj) {
        var str = new Array();
        var element = null;
        for(element in obj) { str[str.length] = element; }
        str.sort();
        alert(obj + ":" + str.join(' '));
    }
    
    var draggingElement = null;
    var nMouseOffsetX = 0;
    var nMouseOffsetY = 0;
    
    function mouseDown(evt) { 
        var target = evt.currentTarget;
        draggingElement = target;

        if(target) {
            var p = document.documentElement.createSVGPoint();
            p.x = evt.clientX;
            p.y = evt.clientY;
        
            var m = getScreenCTM(document.documentElement);

            p = p.matrixTransform(m.inverse());
            nMouseOffsetX = p.x - parseInt(target.getAttribute("dragx"));
            nMouseOffsetY = p.y - parseInt(target.getAttribute("dragy"));
//            displayRawText("mouse offset=" + nMouseOffsetX + "," + nMouseOffsetY);
        }
    }
    function mouseUp(evt) { 
        draggingElement = null;
        nMouseOffsetX = 0;
        nMouseOffsetY = 0;
    }
    function mouseMove(evt) { 
        var p = document.documentElement.createSVGPoint();
        p.x = evt.clientX;
        p.y = evt.clientY;
        
        var m = getScreenCTM(document.documentElement);

        p = p.matrixTransform(m.inverse());
        p.x -= nMouseOffsetX;
        p.y -= nMouseOffsetY;
        
        if(draggingElement) {
            draggingElement.setAttribute("dragx", p.x);
            draggingElement.setAttribute("dragy", p.y);
            draggingElement.setAttribute("transform", "translate(" + p.x + "," + p.y + ")");
        }
        
        displayCoords(p.x, p.y, "(svg user)");
//        displayRawText("mouse offset=" + nMouseOffsetX + "," + nMouseOffsetY);
    }
    
    function displayCoords(x,y,extra) {
        var xNode = document.getElementById("xpos");
        var yNode = document.getElementById("ypos");
        if(xNode && yNode) {
            xNode.firstChild.nodeValue = parseInt(x) + extra;
            yNode.firstChild.nodeValue = parseInt(y) + extra;
        }
    }
    
    function displayRawText(text) {
        var textNode = document.getElementById("raw");
        if(textNode) {
            textNode.firstChild.nodeValue = text;
        }
    }
    
    function init() {
        var ball = document.getElementById("ball");
        var square = document.getElementById("square");
        var logo = document.getElementById("cd_logo");
        var feed = document.getElementById("feed_icon");
        if(ball && square && logo && feed) {
            ball.addEventListener("mousedown", mouseDown, false);
            square.addEventListener("mousedown", mouseDown, false);
            logo.addEventListener("mousedown", mouseDown, false);
            feed.addEventListener("mousedown", mouseDown, false);
        }
        displayRawText("Drag stuff around");
    }
    
    function displayMatrix(matrix) {
        displayRawText(matrix.a + ", " + matrix.b + ", " + matrix.c + ", "
                        + matrix.d + ", " + matrix.e + ", " + matrix.f);
    }
    
    // Following is from Holger Will since ASV3 and O9 do not support getScreenTCM()
    // See http://groups.yahoo.com/group/svg-developers/message/50789
    function getScreenCTM(doc){
        if(doc.getScreenCTM) { return doc.getScreenCTM(); }
        
        var root=doc
        var sCTM= root.createSVGMatrix()

        var tr= root.createSVGMatrix()
        var par=root.getAttribute("preserveAspectRatio")
        if (par==null || par=="") par="xMidYMid meet"//setting to default value
        parX=par.substring(0,4) //xMin;xMid;xMax
        parY=par.substring(4,8)//YMin;YMid;YMax;
        ma=par.split(" ")
        mos=ma[1] //meet;slice

        //get dimensions of the viewport
        sCTM.a= 1
        sCTM.d=1
        sCTM.e= 0
        sCTM.f=0


        w=root.getAttribute("width")
        if (w==null || w=="") w=innerWidth

        h=root.getAttribute("height")
        if (h==null || h=="") h=innerHeight

        // Jeff Schiller:  Modified to account for percentages - I'm not 
        // absolutely certain this is correct but it works for 100%/100%
        if(w.substr(w.length-1, 1) == "%") {
            w = (parseFloat(w.substr(0,w.length-1)) / 100.0) * innerWidth;
        }
        if(h.substr(h.length-1, 1) == "%") {
            h = (parseFloat(h.substr(0,h.length-1)) / 100.0) * innerHeight;
        }

        // get the ViewBox
        vba=root.getAttribute("viewBox")
        if(vba==null) vba="0 0 "+w+" "+h
        var vb=vba.split(" ")//get the viewBox into an array

        //--------------------------------------------------------------------------
        //create a matrix with current user transformation
        tr.a= root.currentScale
        tr.d=root.currentScale
        tr.e= root.currentTranslate.x
        tr.f=root.currentTranslate.y


        //scale factors
        sx=w/vb[2]
        sy=h/vb[3]


        //meetOrSlice
        if(mos=="slice"){
        s=(sx>sy ? sx:sy)
        }else{
        s=(sx<sy ? sx:sy)
        }

        //preserveAspectRatio="none"
        if (par=="none"){
            sCTM.a=sx//scaleX
            sCTM.d=sy//scaleY
            sCTM.e=- vb[0]*sx //translateX
            sCTM.f=- vb[0]*sy //translateY
            sCTM=tr.multiply(sCTM)//taking user transformations into acount

            return sCTM
        }


        sCTM.a=s //scaleX
        sCTM.d=s//scaleY
        //-------------------------------------------------------
        switch(parX){
        case "xMid":
        sCTM.e=((w-vb[2]*s)/2) - vb[0]*s //translateX

        break;
        case "xMin":
        sCTM.e=- vb[0]*s//translateX
        break;
        case "xMax":
        sCTM.e=(w-vb[2]*s)- vb[0]*s //translateX
        break;
        }
        //------------------------------------------------------------
        switch(parY){
        case "YMid":
        sCTM.f=(h-vb[3]*s)/2 - vb[1]*s //translateY
        break;
        case "YMin":
        sCTM.f=- vb[1]*s//translateY
        break;
        case "YMax":
        sCTM.f=(h-vb[3]*s) - vb[1]*s //translateY
        break;
        }
        sCTM=tr.multiply(sCTM)//taking user transformations into acount

        return sCTM
    }
    

]]></script>

<rect id="background" x="0" y="0" width="4000" height="3000" fill="blue" stroke="red" />

<circle id="ball" fill="green" r="200" transform="translate(400,300)" dragx="400" dragy="300"/>

<g id="square" transform="translate(1000,1000)" dragx="1000" dragy="1000">
    <rect x="0" y="0" width="300" height="300" fill="white" stroke="black" stroke-width="10" />
</g>

<g id="cd_logo" transform="translate(2000, 800)" dragx="2000" dragy="800">
    <g transform="matrix(0.910493,0.000000,0.000000,0.865676,-73.81798,-175.5892)">
    <path
       id="logo_c"
       style="fill:#a00000;fill-opacity:1.0000000;stroke:none;stroke-linejoin:bevel;stroke-opacity:1.0000000"
       d="M 413.09375,208.18750 C 394.27724,207.76984 372.46682,211.41841 346.90625,216.40625 C 299.88288,229.43572 234.10941,297.72397 205.37500,320.43750 C 177.97267,342.09810 116.38681,379.49200 86.468750,401.62500 C 86.420104,401.62572 86.361112,401.62428 86.312500,401.62500 C 86.337288,401.64358 86.381413,401.66890 86.406250,401.68750 C 85.929751,402.04018 85.147438,402.53030 84.687500,402.87500 C 85.757007,402.89088 87.039307,402.89221 88.125000,402.90625 C 118.05404,425.04207 179.60652,462.40890 207.00000,484.06250 C 235.73441,506.77604 301.50788,575.09553 348.53125,588.12500 C 406.95538,599.52577 445.69838,603.93842 474.18750,568.78125 C 503.55594,532.53896 499.99263,508.29450 503.25000,481.43750 C 506.50738,456.20919 515.85458,378.73988 481.12500,448.68750 C 456.72935,497.82187 382.52515,471.48171 348.53125,451.93750 C 318.41040,439.05272 275.85216,406.23007 247.68750,402.09375 C 275.84568,396.98687 317.35505,365.23486 346.90625,352.59375 C 380.90015,333.04954 455.10437,306.70938 479.50000,355.84375 C 514.22958,425.79137 504.88238,348.32207 501.62500,323.09375 C 498.36763,296.23675 501.93094,271.99228 472.56250,235.75000 C 456.53737,215.97409 437.28640,208.72449 413.09375,208.18750 z " />
    <path
       id="logo_d"
       style="fill:#a00000;fill-opacity:1.0000000;fill-rule:nonzero;stroke:none;stroke-linejoin:bevel;stroke-opacity:1.0000000"
       d="M 517.09375,208.25000 C 504.84413,206.53353 476.46796,208.58009 495.29850,225.21424 C 525.65129,259.91371 539.87378,306.10714 539.14974,351.81441 C 538.42439,395.39486 540.93673,439.10718 537.34463,482.58628 C 534.01536,520.29827 516.67673,555.38312 492.25596,583.87486 C 481.12719,604.37600 521.06413,595.00564 533.28033,596.12665 C 589.89106,589.96840 645.63674,574.19552 697.31140,550.31392 C 769.95924,510.35654 834.99775,457.97192 896.65625,402.87500 C 891.72600,396.53682 877.45191,385.67213 869.08076,377.86833 C 814.12423,331.38143 756.96824,286.36569 693.08536,252.71728 C 640.76339,229.64221 584.76393,213.52720 527.68464,208.57302 C 524.15822,208.36904 520.62629,208.25034 517.09375,208.25000 z M 665.59375,345.43750 C 704.09661,344.10746 746.55199,359.50174 765.04604,395.41111 C 772.79763,413.38921 747.47280,433.79595 732.09375,443.75000 C 708.43422,458.21420 679.78355,461.13131 652.65625,459.12500 C 660.81764,439.25407 666.50670,417.98421 664.75072,396.42418 C 668.69266,379.68673 651.35278,356.22809 655.98777,345.75721 C 659.18682,345.57849 662.38987,345.47072 665.59375,345.43750 z " />
    </g>
</g>

    <!-- Following feed icon is from Marcus Campbell.  
         See http://www.tecknik.net/poke/post.php/118 -->
  <defs>
    <linearGradient
       id="linearGradient3936">
      <stop
         style="stop-color:#c84600;stop-opacity:1"
         offset="0"
         id="stop3938" />
      <stop
         style="stop-color:#ffd05f;stop-opacity:1"
         offset="1"
         id="stop3940" />
    </linearGradient>
    <linearGradient
       x1="3.5622268"
       y1="14.262734"
       x2="8.2769146"
       y2="0.75067025"
       id="linearGradient1330"
       xlink:href="#linearGradient3936"
       gradientUnits="userSpaceOnUse" />
    <linearGradient
       x1="3.5622268"
       y1="14.262734"
       x2="8.2769146"
       y2="0.75067025"
       id="linearGradient5737"
       xlink:href="#linearGradient3936"
       gradientUnits="userSpaceOnUse"
       gradientTransform="matrix(0.623612,0,0,0.623612,3.419266,1.574041)" />
  </defs>
  <g id="feed_icon" transform="translate(800, 1800)" dragx="800" dragy="1800">
     <g transform="scale(10)">
    <g
       transform="matrix(1.5,0,0,1.5,-5.126006,-2.359249)"
       id="g9227">
      <rect
         width="9.0588369"
         height="9.07969"
         rx="1.1707681"
         ry="1.1707681"
         x="4.5833306"
         y="2.7088263"
         style="opacity:0.25;fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:#000000;stroke-width:0.86307895;stroke-linecap:butt;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1"
         id="rect1334" />
      <rect
         width="9.0588369"
         height="9.07969"
         rx="1.3180826"
         ry="1.3475453"
         x="3.8787436"
         y="2.0230923"
         style="fill:url(#linearGradient5737);fill-opacity:1;fill-rule:nonzero;stroke:#c84600;stroke-width:0.86307895;stroke-linecap:butt;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1"
         id="rect1307" />
      <path
         d="M 5.3190346 11.088471 A 1.1581769 1.1367292 0 1 1  3.0026808,11.088471 A 1.1581769 1.1367292 0 1 1  5.3190346 11.088471 z"
         transform="matrix(0.974394,0,0,0.974394,2.049778,-1.805377)"
         style="fill:#c84600;fill-opacity:1;fill-rule:nonzero;stroke:#c84600;stroke-width:0;stroke-linecap:butt;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1"
         id="path5692" />
      <path
         d="M 5.3190346 11.088471 A 1.1581769 1.1367292 0 1 1  3.0026808,11.088471 A 1.1581769 1.1367292 0 1 1  5.3190346 11.088471 z"
         transform="matrix(0.974394,0,0,0.974394,2.200465,-2.021341)"
         style="fill:#ffffff;fill-opacity:1;fill-rule:nonzero;stroke:#c84600;stroke-width:0;stroke-linecap:butt;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1"
         id="path4817" />
      <path
         d="M 6.4736314,6.3896604 C 7.3583608,6.2741389 7.7509468,6.4288254 8.1044569,6.7556694 C 8.8087252,7.4068125 8.6222438,8.4693231 8.6222438,8.4693231"
         style="fill:none;fill-opacity:0.75;fill-rule:evenodd;stroke:#c84600;stroke-width:1.03651607;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1"
         id="path8348" />
      <path
         d="M 6.4063946,5.831123 C 9.6106184,5.3437481 9.2471248,8.5040158 9.2471248,8.5040158"
         style="fill:none;fill-opacity:0.75;fill-rule:evenodd;stroke:#ffffff;stroke-width:1.2472235;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1"
         id="path6592" />
      <path
         d="M 6.7526894,4.0168863 C 11.242833,3.8185975 10.992432,7.9404861 10.992432,7.9404861"
         style="fill:none;fill-opacity:0.75;fill-rule:evenodd;stroke:#c84600;stroke-width:1.11883724;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1"
         id="path9223" />
      <path
         d="M 6.7415642,3.5307607 C 11.705599,3.3078766 11.42877,7.9410338 11.42877,7.9410338"
         style="fill:none;fill-opacity:0.75;fill-rule:evenodd;stroke:#ffffff;stroke-width:1.24722409;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1"
         id="path9225" />
      <path
         d="M 5.3190346 11.088471 A 1.1581769 1.1367292 0 1 1  3.0026808,11.088471 A 1.1581769 1.1367292 0 1 1  5.3190346 11.088471 z"
         transform="matrix(0.974394,0,0,0.974394,3.145802,-1.041356)"
         style="fill:none;fill-opacity:1;fill-rule:nonzero;stroke:#c84600;stroke-width:0;stroke-linecap:butt;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1"
         id="path1336" />
      <path
         d="M 5.3190346 11.088471 A 1.1581769 1.1367292 0 1 1  3.0026808,11.088471 A 1.1581769 1.1367292 0 1 1  5.3190346 11.088471 z"
         transform="matrix(0.974394,0,0,0.974394,2.905052,-1.335607)"
         style="fill:none;fill-opacity:1;fill-rule:nonzero;stroke:#c84600;stroke-width:0;stroke-linecap:butt;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1"
         id="path1338" />
    </g>
    </g>
  </g>

<text x="3000" y="200" font-size="100" fill="white">X:</text>
<text id="xpos" x="3200" y="200" font-size="100" fill="white">0</text>

<text x="3000" y="320" font-size="100" fill="white">Y:</text>
<text id="ypos" x="3200" y="320" font-size="100" fill="white">0</text>

<text id="raw" x="200" y="2800" font-size="60" fill="white"> </text>

</svg>